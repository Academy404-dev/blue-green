node {
    def gitcommit
    def contenedortest = docker.image('node')

    def entornoActivo = ''
    def entornoInactivo = ''

    stage('VerificaciÃ³n SCM') {
        checkout scm
        sh "git rev-parse --short HEAD > .git/commit-id"                        
        gitcommit = readFile('.git/commit-id').trim()
    }
    stage('Determinar Entorno') {
        entornoActivo = sh "kubectl get service knodeapp-service-blue-green -o=jsonpath='{.spec.selector.version}'"
        if (entornoActivo == 'blue') {
            entornoInactivo = 'green'
        } else {
            entornoInactivo = 'blue'
        }
    }
    stage('Test Node.js') {
        contenedortest.pull()
        contenedortest.inside {
            sh 'npm install --only=dev'
            sh 'npm test'
        }
    }
    stage('Docker Build & Push') {
        docker.withRegistry('https://registry.hub.docker.com', 'docker-hub') {
            def nuestraapp = docker.build("norman404/eneroappnodes:${gitcommit}", ".")
            nuestraapp.push()
        }
    }
    stage('Deploy Inactivo') {
        sh "sed -i 's/<IMAGE_TAG>/${gitcommit}/g' Deployments/deployment-${entornoInactivo}.yaml"
        sh "kubectl apply -f Deployments/deployment-${entornoInactivo}.yaml"
        // Considerar agregar pasos para verificar la salud del despliegue
    }
    stage('Switch to Inactive') {
        sh "kubectl patch service knodeapp-service-blue-green -p '{\"spec\":{\"selector\":{\"version\":\"${entornoInactivo}\"}}}'"
    }
}
